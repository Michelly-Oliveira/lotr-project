{"version":3,"sources":["assets/logo.png","assets/loadingRing.gif","components/Header/styles.ts","components/Header/index.tsx","services/api.ts","components/Spinner/index.tsx","components/List/styles.ts","components/List/ListBooks.tsx","components/List/ListCharacters.tsx","components/List/ListMovies.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","Container","styled","header","Button","button","props","isPageActive","css","Header","buttonsState","changeButtonsState","src","logoImg","alt","name","onClick","api","axios","create","baseURL","headers","Authorization","process","Spinner","spinner","style","width","margin","display","div","Card","CardFront","CardBack","ListBooks","useState","books","setBooks","isLoading","setIsLoading","useEffect","a","get","response","booksData","data","docs","map","book","findImage","booksImages","find","img","image_url","loadBooksData","key","_id","className","ListCharacters","characters","setCharacters","charactersData","charactersWithImages","filter","character","charactersImages","loadCharactersData","birth","death","race","gender","realm","ListMovies","movies","setMovies","moviesData","splice","console","log","movie","moviesImages","loadMoviesData","runtimeInMinutes","academyAwardWins","academyAwardNominations","createGlobalStyle","App","setButtonsState","handleButtonClick","useCallback","event","clickedBtn","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af8e77f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d265f318.png\";","module.exports = __webpack_public_path__ + \"static/media/loadingRing.753b5e52.gif\";","import styled, { css } from 'styled-components';\n\ninterface ButtonProps {\n  isPageActive: boolean;\n}\n\nexport const Container = styled.header`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n\n  img {\n    width: 200px;\n    margin-bottom: 30px;\n  }\n\n  div {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    width: 400px;\n  }\n`;\n\nexport const Button = styled.button<ButtonProps>`\n  font-weight: 500;\n  color: #fff;\n  background: transparent;\n  padding-bottom: 10px;\n  border: none;\n  border-bottom: #1a3339 2px solid;\n\n  ${props =>\n    props.isPageActive &&\n    css`\n      border-bottom: #e6b956 2px solid;\n      color: #e6b956;\n    `}\n`;\n","import React from 'react';\n\nimport logoImg from '../../assets/logo.png';\n\nimport { Container, Button } from './styles';\n\ninterface ButtonsStateProps {\n  name: string;\n  isPageActive: boolean;\n}\n\ninterface HeaderProps {\n  buttonsState: Array<ButtonsStateProps>;\n  changeButtonsState(event: React.MouseEvent<HTMLButtonElement>): void;\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  buttonsState,\n  changeButtonsState,\n}) => {\n  return (\n    <Container>\n      <img src={logoImg} alt=\"logo\" />\n\n      <div>\n        <Button\n          name=\"Books\"\n          onClick={changeButtonsState}\n          isPageActive={buttonsState[0].isPageActive}\n        >\n          Books\n        </Button>\n\n        <Button\n          name=\"Characters\"\n          onClick={changeButtonsState}\n          isPageActive={buttonsState[1].isPageActive}\n        >\n          Characters\n        </Button>\n\n        <Button\n          name=\"Movies\"\n          onClick={changeButtonsState}\n          isPageActive={buttonsState[2].isPageActive}\n        >\n          Movies\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://the-one-api.herokuapp.com/v1',\n  headers: { Authorization: `Bearer ${process.env.REACT_APP_API_KEY}` },\n});\n\nexport default api;\n","import React from 'react';\n\nimport spinner from '../../assets/loadingRing.gif';\n\nconst Spinner = () => {\n  return (\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt=\"Loading\"\n    />\n  );\n};\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n\nexport const Card = styled.div`\n  height: 300px;\n  width: 200px;\n  border-radius: 10px;\n  margin: 20px;\n\n  perspective: 1000px;\n  background-color: transparent;\n\n  .card-inner {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    transition: transform 0.8s;\n    transform-style: preserve-3d;\n  }\n\n  &:hover .card-inner {\n    transform: rotateY(180deg);\n  }\n`;\n\nexport const CardFront = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  img {\n    width: 100%;\n    height: 300px;\n    border-radius: 10px;\n  }\n`;\n\nexport const CardBack = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  background-color: #333;\n  padding: 20px;\n  border-radius: 10px;\n  transform: rotateY(180deg);\n\n  p {\n    font-size: 14px;\n  }\n\n  span {\n    font-size: 12px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport api from '../../services/api';\nimport booksImages from '../../services/images/books.json';\n\nimport Spinner from '../Spinner';\n\nimport { Container, Card, CardFront, CardBack } from './styles';\n\ninterface BookProps {\n  _id: string;\n  name: string;\n  image_url: string | undefined;\n}\n\nconst ListBooks: React.FC = () => {\n  const [books, setBooks] = useState<BookProps[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function loadBooksData(): Promise<void> {\n      setIsLoading(true);\n\n      const response = await api.get('/book');\n      const booksData = response.data.docs;\n\n      booksData.map((book: BookProps) => {\n        const findImage = booksImages.find(img => img.name === book.name);\n\n        book.image_url = findImage?.image_url;\n      });\n\n      setBooks(booksData);\n      setIsLoading(false);\n    }\n\n    loadBooksData();\n  }, []);\n\n  return (\n    <Container>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <ul>\n          {books.map(book => (\n            <Card key={book._id}>\n              <div className=\"card-inner\">\n                <CardFront>\n                  <img src={book.image_url} alt=\"book cover\" />\n                </CardFront>\n\n                <CardBack>\n                  <h3>\n                    <strong>{book.name}</strong>\n                  </h3>\n                </CardBack>\n              </div>\n            </Card>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n};\n\nexport default ListBooks;\n","import React, { useState, useEffect } from 'react';\n\nimport api from '../../services/api';\nimport charactersImages from '../../services/images/characters.json';\n\nimport Spinner from '../Spinner';\n\nimport { Container, Card, CardFront, CardBack } from './styles';\n\ninterface CharactersProps {\n  _id: string;\n  name: string;\n  image_url: string;\n  gender: string;\n  realm: string;\n  race: string;\n  birth: string;\n  death: string;\n}\n\nconst ListCharacters: React.FC = () => {\n  const [characters, setCharacters] = useState<CharactersProps[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function loadCharactersData(): Promise<void> {\n      setIsLoading(true);\n\n      const response = await api.get('/character');\n      const charactersData = response.data.docs;\n\n      const charactersWithImages = charactersData.filter(\n        (character: CharactersProps) => {\n          const findImage = charactersImages.find(\n            img => img.name === character.name,\n          );\n\n          if (findImage) {\n            character.image_url = findImage.image_url;\n            return character;\n          }\n\n          return;\n        },\n      );\n\n      setCharacters(charactersWithImages);\n      setIsLoading(false);\n    }\n\n    loadCharactersData();\n  }, []);\n\n  return (\n    <Container>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <ul>\n          {characters.map(character => (\n            <Card key={character._id}>\n              <div className=\"card-inner\">\n                <CardFront>\n                  <img src={character.image_url} alt=\"character cover\" />\n                </CardFront>\n\n                <CardBack>\n                  <h3>\n                    <strong>{character.name}</strong>\n                    <br />\n                    <span>\n                      (Birth: {character.birth || 'unknow'} - Death:{' '}\n                      {character.death || 'unknow'})\n                    </span>\n                  </h3>\n                  <br />\n\n                  <p>Race: {character.race || '-'}</p>\n                  <br />\n\n                  <p>Gender: {character.gender || '-'}</p>\n                  <br />\n\n                  <p>Realm: {character.realm || '-'}</p>\n                </CardBack>\n              </div>\n            </Card>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n};\n\nexport default ListCharacters;\n","import React, { useState, useEffect } from 'react';\n\nimport api from '../../services/api';\nimport moviesImages from '../../services/images/movies.json';\n\nimport Spinner from '../Spinner';\n\nimport { Container, Card, CardFront, CardBack } from './styles';\n\ninterface MovieProps {\n  _id: string;\n  name: string;\n  image_url: string | undefined;\n  runtimeInMinutes: string;\n  academyAwardWins: number;\n  academyAwardNominations: number;\n}\n\nconst ListMovies: React.FC = () => {\n  const [movies, setMovies] = useState<MovieProps[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function loadMoviesData(): Promise<void> {\n      setIsLoading(true);\n\n      const response = await api.get('/movie');\n      const moviesData = response.data.docs;\n\n      // Remove two first items = series\n      moviesData.splice(0, 2);\n      console.log(moviesData);\n\n      moviesData.map((movie: MovieProps) => {\n        const findImage = moviesImages.find(img => img.name === movie.name);\n\n        movie.image_url = findImage?.image_url;\n      });\n\n      setMovies(moviesData);\n      setIsLoading(false);\n    }\n\n    loadMoviesData();\n  }, []);\n\n  return (\n    <Container>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <ul>\n          {movies.map(movie => (\n            <Card key={movie._id}>\n              <div className=\"card-inner\">\n                <CardFront>\n                  <img src={movie.image_url} alt=\"movie cover\" />\n                </CardFront>\n\n                <CardBack>\n                  <h3>\n                    <strong>{movie.name}</strong>\n                  </h3>\n                  <br />\n\n                  <p>Runtime: {movie.runtimeInMinutes} min</p>\n                  <br />\n\n                  <p>Awards: {movie.academyAwardWins}</p>\n                  <br />\n\n                  <p>Nominations: {movie.academyAwardNominations}</p>\n                </CardBack>\n              </div>\n            </Card>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n};\n\nexport default ListMovies;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body {\n    background: #1a3339;\n    color: #fff;\n    -webkit-font-smoothing: antialiased;\n    overflow-x: hidden;\n  }\n\n  body, input, button {\n    font-family: 'Roboto Slab', serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h6, h6 {\n    font-weight: 500;\n    color: #e6b956;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React, { useState, useCallback } from 'react';\n\nimport Header from './components/Header';\nimport ListBooks from './components/List/ListBooks';\nimport ListCharacters from './components/List/ListCharacters';\nimport ListMovies from './components/List/ListMovies';\n\nimport GlobalStyles from './styles/global';\n\nconst App: React.FC = () => {\n  const [buttonsState, setButtonsState] = useState([\n    { name: 'Books', isPageActive: true },\n    { name: 'Characters', isPageActive: false },\n    { name: 'Movies', isPageActive: false },\n  ]);\n\n  const handleButtonClick = useCallback(\n    event => {\n      const clickedBtn = event.target.name;\n\n      const changeButtonsState = buttonsState.map(button => {\n        if (button.name === clickedBtn) {\n          button.isPageActive = true;\n        } else {\n          button.isPageActive = false;\n        }\n\n        return button;\n      });\n\n      setButtonsState(changeButtonsState);\n    },\n    [buttonsState],\n  );\n\n  return (\n    <>\n      <GlobalStyles />\n\n      <Header\n        buttonsState={buttonsState}\n        changeButtonsState={handleButtonClick}\n      />\n\n      {(buttonsState[0].isPageActive && <ListBooks />) ||\n        (buttonsState[1].isPageActive && <ListCharacters />) ||\n        (buttonsState[2].isPageActive && <ListMovies />)}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}